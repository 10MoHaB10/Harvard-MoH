import os
import json
from fastapi import FastAPI, Request
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import (
    Application, CommandHandler, MessageHandler, filters, ContextTypes
)

TOKEN = os.environ.get("BOT_TOKEN")
OWNER_ID = 6871615592

DATA_FILE = "data.json"
WELCOME_FILE = "welcome.txt"

app = FastAPI()
bot_app = None  # هذا سيكون التطبيق الرئيسي للبوت

def load_data():
    try:
        with open(DATA_FILE, "r", encoding="utf-8") as f:
            return json.load(f)
    except FileNotFoundError:
        return {}

def save_data(data):
    with open(DATA_FILE, "w", encoding="utf-8") as f:
        json.dump(data, f, ensure_ascii=False, indent=2)

def load_welcome():
    try:
        with open(WELCOME_FILE, "r", encoding="utf-8") as f:
            return f.read()
    except FileNotFoundError:
        return "مرحبًا بك في البوت!"

def save_welcome(text):
    with open(WELCOME_FILE, "w", encoding="utf-8") as f:
        f.write(text)

@app.post("/webhook")
async def webhook(req: Request):
    data = await req.json()
    update = Update.de_json(data, bot_app.bot)
    await bot_app.update_queue.put(update)
    return {"ok": True}

# أوامر البوت

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.effective_user.id != OWNER_ID:
        await update.message.reply_text("هذه الأوامر محصورة فقط على صاحب البوت.")
        return
    await update.message.reply_text(load_welcome())

async def set_welcome(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.effective_user.id != OWNER_ID:
        await update.message.reply_text("هذه الأوامر محصورة فقط على صاحب البوت.")
        return
    if context.args:
        text = " ".join(context.args)
        save_welcome(text)
        await update.message.reply_text("تم تحديث رسالة الترحيب ✅")
    else:
        await update.message.reply_text("يرجى كتابة نص رسالة الترحيب بعد الأمر.\nمثال:\n/setwelcome مرحبًا بكم في البوت!")

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text.lower()
    data = load_data()
    if text in data:
        entry = data[text]
        reply_markup = None
        if entry.get("buttons"):
            keyboard = [[InlineKeyboardButton(btn["text"], url=btn["url"])] for btn in entry["buttons"]]
            reply_markup = InlineKeyboardMarkup(keyboard)
        if entry.get("text"):
            await update.message.reply_text(entry["text"], reply_markup=reply_markup)
        elif entry.get("file_id"):
            await update.message.reply_document(entry["file_id"], reply_markup=reply_markup)

def main():
    global bot_app
    bot_app = Application.builder().token(TOKEN).build()

    bot_app.add_handler(CommandHandler("start", start))
    bot_app.add_handler(CommandHandler("setwelcome", set_welcome))
    bot_app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    PORT = int(os.environ.get("PORT", 8000))
    WEBHOOK_URL = os.environ.get("WEBHOOK_URL")  # هذا رابط ويب الخاص بك مع /webhook

    print(f"Starting webhook on port {PORT} with url {WEBHOOK_URL}")

    bot_app.run_webhook(
        listen="0.0.0.0",
        port=PORT,
        webhook_url=WEBHOOK_URL
    )

if name == "__main__":
    main()
